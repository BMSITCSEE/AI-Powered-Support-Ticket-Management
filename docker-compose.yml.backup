services:
  celery-worker:
    build: .
    container_name: ticket_celery_worker
    command: celery -A tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=1
      - PYTHONPATH=/app
    volumes:
      - ./models/saved:/app/models/saved
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  celery-beat:
    build: .
    container_name: ticket_celery_beat
    command: celery -A tasks.celery_app beat --loglevel=info
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=1
      - PYTHONPATH=/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  flower:
    build: .
    container_name: ticket_flower
    command: celery -A tasks.celery_app flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_BROKER_API=redis://redis:6379/0
      - C_FORCE_ROOT=1
      - PYTHONPATH=/app
    depends_on:
      - redis
      - celery-worker
    env_file:
      - .env

  streamlit:
    build: .
    container_name: ticket_streamlit
    ports:
      - "8501:8501"
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./app:/app/app
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./tasks:/app/tasks
      - ./utils:/app/utils
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    command: streamlit run app/main.py --server.maxUploadSize=50